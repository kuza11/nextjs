"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/persons/logs/[id]";
exports.ids = ["pages/api/persons/logs/[id]"];
exports.modules = {

/***/ "cors":
/*!***********************!*\
  !*** external "cors" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("cors");

/***/ }),

/***/ "sqlite3":
/*!**************************!*\
  !*** external "sqlite3" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("sqlite3");

/***/ }),

/***/ "next-connect":
/*!*******************************!*\
  !*** external "next-connect" ***!
  \*******************************/
/***/ ((module) => {

module.exports = import("next-connect");;

/***/ }),

/***/ "sqlite":
/*!*************************!*\
  !*** external "sqlite" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("sqlite");;

/***/ }),

/***/ "(api)/./DB_functions/DB_log_funcs.ts":
/*!**************************************!*\
  !*** ./DB_functions/DB_log_funcs.ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"insertDB\": () => (/* binding */ insertDB),\n/* harmony export */   \"readDB\": () => (/* binding */ readDB)\n/* harmony export */ });\n/* harmony import */ var sqlite3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sqlite3 */ \"sqlite3\");\n/* harmony import */ var sqlite3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sqlite3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sqlite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sqlite */ \"sqlite\");\n/* harmony import */ var _config_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../config.json */ \"(api)/./config.json\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([sqlite__WEBPACK_IMPORTED_MODULE_1__]);\nsqlite__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nasync function readDB({ table  }, { persons_id , sort , filter  }) {\n    const db = await openDB();\n    let cmplt = [];\n    let arr = [];\n    console.log(sort);\n    arr.push(persons_id ? persons_id.toString() : \"\");\n    arr = arr.concat(filter ? filter.map((e)=>e.toString()) : []);\n    let logsArr = await db.all(`SELECT logs.id, logs.name, logs.description, logs.time, logs.date, logs.rating, logs.persons_id, persons.username, languages.name as lang_name from ${table} INNER JOIN languages on logs.languages_id=languages.id INNER JOIN persons on logs.persons_id=persons.id INNER JOIN tags_assignment on tags_assignment.logs_id=logs.id WHERE persons.id = ? ${filter ? \"AND (\" + filter.map((e)=>\"tags_assignment.tags_id = ?\").toString().replaceAll(\",\", \" OR \") + \")\" : \"\"} ${sort.by ? `ORDER BY ${sort.by} ${sort.order ? sort.order : \"\"}` : \"\"};`, arr); //.catch((e) => console.error(e));\n    for(let i = 0; i < logsArr.length; i++){\n        cmplt.push({\n            log: logsArr[i],\n            tags: await db.all(`SELECT tags.id, tags.name, tags.description, tags.color FROM tags_assignment INNER JOIN tags on tags.id=tags_assignment.tags_id WHERE tags_assignment.logs_id = ?;`, [\n                logsArr[i].id\n            ])\n        });\n    }\n    return cmplt;\n}\nasync function insertDB({ table  }, { name , description , time , date , rating , persons_id , language , tags , tags_id  }) {\n    const db = await openDB();\n    console.log(language);\n    const resultLog = await db.run(`INSERT INTO ${table} (languages_id) SELECT languages.id FROM languages WHERE languages.name = ?;`, [\n        language\n    ]);\n    const result = await db.run(`UPDATE ${table} set name = ?, description = ?, time = ?, date = ?, rating = ?, persons_id = ? WHERE id = ?;`, [\n        name,\n        description,\n        time,\n        date,\n        rating,\n        persons_id,\n        resultLog.lastID\n    ]);\n    await db.run(`INSERT INTO tags_assignment (logs_id, tags_id)`);\n    if (!result.lastID || !resultLog.lastID) return 1;\n    if (tags) {\n        let Aarr = [];\n        let cmdC = crtCmd(tags);\n        const resultTag = await db.run(cmdC.Tcmd, cmdC.Tarr);\n        if (!resultTag.lastID) return 1;\n        for(let i = 0; i < tags.length; i++){\n            Aarr.push(resultLog.lastID, resultTag.lastID - i);\n        }\n        await db.run(cmdC.Acmd, Aarr);\n    }\n    if (tags_id) {\n        let Aarr1 = [];\n        let cmd = crtTAcmd(tags_id);\n        for(let i1 = 0; i1 < tags_id.length; i1++){\n            Aarr1.push(resultLog.lastID, tags_id[i1]);\n        }\n        await db.run(cmd, Aarr1);\n    }\n    return resultLog;\n}\nasync function openDB() {\n    return (0,sqlite__WEBPACK_IMPORTED_MODULE_1__.open)({\n        filename: \"./\" + _config_json__WEBPACK_IMPORTED_MODULE_2__.databaseName,\n        driver: (sqlite3__WEBPACK_IMPORTED_MODULE_0___default().Database)\n    });\n}\nfunction crtCmd(tags) {\n    let Tcmd = \"INSERT INTO tags (name, color, description) VALUES \";\n    let Acmd = \"INSERT INTO tags_assignment (logs_id, tags_id) VALUES \";\n    let Tarr = [];\n    tags.forEach((tag)=>{\n        Tcmd += \"(?,?,?)\";\n        Acmd += \"(?,?)\";\n        Tarr.push(tag.name, tag.color, tag.description);\n    });\n    Tcmd += \";\";\n    return {\n        Tarr,\n        Tcmd,\n        Acmd\n    };\n}\nfunction crtTAcmd(tags) {\n    let cmd = \"INSERT INTO tags_assignment (logs_id, tags_id) VALUES \";\n    tags.forEach((tag)=>{\n        cmd += \"(?,?)\";\n    });\n    return cmd;\n}\n //SELECT logs.id, logs.name, logs.description, logs.time, logs.date, logs.rating, logs.persons_id, persons.username, languages.name as lang_name from logs INNER JOIN languages on logs.languages_id=languages.id INNER JOIN persons on logs.persons_id=persons.id INNER JOIN tags_assignment on tags_assignment.logs_id=logs.id WHERE persons.id = 1 AND (tags_assignment.tags_id = 2 OR tags_assignment.tags_id = 1) ORDER BY lang_name ;\n //SELECT logs.id, logs.name, logs.description, logs.time, logs.date, logs.rating, logs.persons_id, persons.username, languages.name as lang_name from logs INNER JOIN languages on logs.languages_id=languages.id INNER JOIN persons on logs.persons_id=persons.id INNER JOIN tags_assignment on tags_assignment.logs_id=logs.id WHERE persons.id = ? AND (tags_assignment.tags_id = ?) ;11\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./DB_functions/DB_log_funcs.ts\n");

/***/ }),

/***/ "(api)/./src/pages/api/persons/logs/[id]/index.exp.ts":
/*!******************************************************!*\
  !*** ./src/pages/api/persons/logs/[id]/index.exp.ts ***!
  \******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _DB_functions_DB_log_funcs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../DB_functions/DB_log_funcs */ \"(api)/./DB_functions/DB_log_funcs.ts\");\n/* harmony import */ var next_connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-connect */ \"next-connect\");\n/* harmony import */ var cors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cors */ \"cors\");\n/* harmony import */ var cors__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(cors__WEBPACK_IMPORTED_MODULE_2__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_DB_functions_DB_log_funcs__WEBPACK_IMPORTED_MODULE_0__, next_connect__WEBPACK_IMPORTED_MODULE_1__]);\n([_DB_functions_DB_log_funcs__WEBPACK_IMPORTED_MODULE_0__, next_connect__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nconst router = (0,next_connect__WEBPACK_IMPORTED_MODULE_1__.createRouter)();\nrouter.use((0,next_connect__WEBPACK_IMPORTED_MODULE_1__.expressWrapper)(cors__WEBPACK_IMPORTED_MODULE_2___default()())).use(async (req, res, next)=>{\n    const start = Date.now();\n    await next();\n    const end = Date.now();\n}).get(async (req, res)=>{\n    let sort = req.query.sort;\n    let order = req.query.order;\n    let filter = JSON.parse(req.query.filter ? req.query.filter?.toString() : \"null\");\n    if (order != \"asc\" && order != \"desc\") order = undefined;\n    if (sort != \"time\" && sort != \"rating\" && sort != \"date\" && sort != \"lang_name\") sort = undefined;\n    console.log(filter);\n    const data = await (0,_DB_functions_DB_log_funcs__WEBPACK_IMPORTED_MODULE_0__.readDB)({\n        table: \"logs\"\n    }, {\n        persons_id: req.query.id,\n        sort: {\n            by: sort,\n            order: order\n        },\n        filter: filter\n    });\n    if (data) res.status(200).json(data);\n    else res.status(500).json({\n        message: \"error\"\n    });\n}).post(async (req, res)=>{\n    const result = await (0,_DB_functions_DB_log_funcs__WEBPACK_IMPORTED_MODULE_0__.insertDB)({\n        table: \"logs\"\n    }, {\n        name: JSON.parse(req.body).name,\n        description: JSON.parse(req.body).description,\n        time: JSON.parse(req.body).time,\n        date: JSON.parse(req.body).date,\n        rating: req.query.rating,\n        persons_id: req.query.id,\n        language: JSON.parse(req.body).language,\n        tags: JSON.parse(req.body).tags,\n        tags_id: JSON.parse(req.body).tags_id\n    });\n    if (result == 1) res.status(500).json({\n        message: \"error\"\n    });\n    else if (result) res.status(201).json(result);\n    else res.status(500).json({\n        message: \"error\"\n    });\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (router.handler({\n    onError: (err, req, res)=>{\n        res.status(400).json({\n            error: err,\n            message: \"Probably wrong data in body\"\n        });\n    },\n    onNoMatch: (req, res)=>{\n        res.status(405).json({\n            message: \"Method Not Allowed\"\n        });\n    }\n})); /*export default async function RWllogs(\r\n  req: NextApiRequest,\r\n  res: NextApiResponse\r\n) {\r\n  try {\r\n    if(req.method === \"GET\"){\r\n      let sort = req.query.sort;\r\n      let order = req.query.order;\r\n      if(order != \"asc\" && order != \"desc\") order = undefined;\r\n      if(sort != \"time\" && sort != \"rating\" && sort !=\"date\") sort = undefined;\r\n      const data = await readDB({table: \"logs\"}, {persons_id: req.query.id, sort: {by: sort, order: order}});\r\n      if(data) res.status(200).json(data);\r\n      else res.status(500).json({message: \"error\"});\r\n    }else if(req.method === \"POST\"){\r\n      const result = await insertDB({table: \"logs\"}, {name: JSON.parse(req.body).name, description: JSON.parse(req.body).description, time: JSON.parse(req.body).time, date: JSON.parse(req.body).date, rating: req.query.rating, persons_id: req.query.id, language: JSON.parse(req.body).language, tags: JSON.parse(req.body).tags, tags_id: JSON.parse(req.body).tags_id});\r\n      if(result == 1) res.status(500).json({message: \"error\"});\r\n      else if(result) res.status(201).json(result);\r\n      else res.status(500).json({message: \"error\"});\r\n        \r\n    }else{\r\n      res.status(405).json({ message: \"Method Not Allowed\" });\r\n    }\r\n  } catch (error) {\r\n    res.status(400).json({error: error, message: \"Probably wrong data in body\"});\r\n  }\r\n\r\n}*/ \n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL3BlcnNvbnMvbG9ncy9baWRdL2luZGV4LmV4cC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUMrRTtBQUNuQjtBQUNwQztBQUV4QixNQUFNSyxTQUFTSCwwREFBWUE7QUFFM0JHLE9BQ0dDLEdBQUcsQ0FBQ0gsNERBQWNBLENBQUNDLDJDQUFJQSxLQUN2QkUsR0FBRyxDQUFDLE9BQU9DLEtBQUtDLEtBQUtDLE9BQVM7SUFDN0IsTUFBTUMsUUFBUUMsS0FBS0MsR0FBRztJQUN0QixNQUFNSDtJQUNOLE1BQU1JLE1BQU1GLEtBQUtDLEdBQUc7QUFDdEIsR0FDQ0UsR0FBRyxDQUFDLE9BQU9QLEtBQUtDLE1BQVE7SUFDdkIsSUFBSU8sT0FBT1IsSUFBSVMsS0FBSyxDQUFDRCxJQUFJO0lBQ3pCLElBQUlFLFFBQVFWLElBQUlTLEtBQUssQ0FBQ0MsS0FBSztJQUMzQixJQUFJQyxTQUFTQyxLQUFLQyxLQUFLLENBQUNiLElBQUlTLEtBQUssQ0FBQ0UsTUFBTSxHQUFHWCxJQUFJUyxLQUFLLENBQUNFLE1BQU0sRUFBRUcsYUFBYSxNQUFNO0lBQ2hGLElBQUdKLFNBQVMsU0FBU0EsU0FBUyxRQUFRQSxRQUFRSztJQUM5QyxJQUFHUCxRQUFRLFVBQVVBLFFBQVEsWUFBWUEsUUFBTyxVQUFVQSxRQUFPLGFBQWFBLE9BQU9PO0lBQ3JGQyxRQUFRQyxHQUFHLENBQUNOO0lBQ1osTUFBTU8sT0FBTyxNQUFNeEIsa0VBQU1BLENBQUM7UUFBQ3lCLE9BQU87SUFBTSxHQUFHO1FBQUNDLFlBQVlwQixJQUFJUyxLQUFLLENBQUNZLEVBQUU7UUFBRWIsTUFBTTtZQUFDYyxJQUFJZDtZQUFNRSxPQUFPQTtRQUFLO1FBQUdDLFFBQVFBO0lBQU07SUFDcEgsSUFBR08sTUFBTWpCLElBQUlzQixNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDTjtTQUN6QmpCLElBQUlzQixNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1FBQUNDLFNBQVM7SUFBTztBQUU3QyxHQUNDQyxJQUFJLENBQUMsT0FBTzFCLEtBQUtDLE1BQVE7SUFDeEIsTUFBTTBCLFNBQVMsTUFBTWxDLG9FQUFRQSxDQUFDO1FBQUMwQixPQUFPO0lBQU0sR0FBRztRQUFDUyxNQUFNaEIsS0FBS0MsS0FBSyxDQUFDYixJQUFJNkIsSUFBSSxFQUFFRCxJQUFJO1FBQUVFLGFBQWFsQixLQUFLQyxLQUFLLENBQUNiLElBQUk2QixJQUFJLEVBQUVDLFdBQVc7UUFBRUMsTUFBTW5CLEtBQUtDLEtBQUssQ0FBQ2IsSUFBSTZCLElBQUksRUFBRUUsSUFBSTtRQUFFQyxNQUFNcEIsS0FBS0MsS0FBSyxDQUFDYixJQUFJNkIsSUFBSSxFQUFFRyxJQUFJO1FBQUVDLFFBQVFqQyxJQUFJUyxLQUFLLENBQUN3QixNQUFNO1FBQUViLFlBQVlwQixJQUFJUyxLQUFLLENBQUNZLEVBQUU7UUFBRWEsVUFBVXRCLEtBQUtDLEtBQUssQ0FBQ2IsSUFBSTZCLElBQUksRUFBRUssUUFBUTtRQUFFQyxNQUFNdkIsS0FBS0MsS0FBSyxDQUFDYixJQUFJNkIsSUFBSSxFQUFFTSxJQUFJO1FBQUVDLFNBQVN4QixLQUFLQyxLQUFLLENBQUNiLElBQUk2QixJQUFJLEVBQUVPLE9BQU87SUFBQTtJQUNyVyxJQUFHVCxVQUFVLEdBQUcxQixJQUFJc0IsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztRQUFDQyxTQUFTO0lBQU87U0FDakQsSUFBR0UsUUFBUTFCLElBQUlzQixNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDRztTQUNoQzFCLElBQUlzQixNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1FBQUNDLFNBQVM7SUFBTztBQUM3QztBQUNGLGlFQUFlM0IsT0FBT3VDLE9BQU8sQ0FBQztJQUM1QkMsU0FBUyxDQUFDQyxLQUFLdkMsS0FBS0MsTUFBUTtRQUMxQkEsSUFBSXNCLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFBQ2dCLE9BQU9EO1lBQUtkLFNBQVM7UUFBNkI7SUFDMUU7SUFDQWdCLFdBQVcsQ0FBQ3pDLEtBQUtDLE1BQVE7UUFDdkJBLElBQUlzQixNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLFNBQVM7UUFBcUI7SUFDdkQ7QUFDRixFQUFFLEVBQUMsQ0FFSCIsInNvdXJjZXMiOlsid2VicGFjazovL3Byb2plY3QvLi9zcmMvcGFnZXMvYXBpL3BlcnNvbnMvbG9ncy9baWRdL2luZGV4LmV4cC50cz8xNDMyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tIFwibmV4dFwiO1xyXG5pbXBvcnQgeyBpbnNlcnREQiwgcmVhZERCIH0gZnJvbSBcIi4uLy4uLy4uLy4uLy4uLy4uL0RCX2Z1bmN0aW9ucy9EQl9sb2dfZnVuY3NcIjtcclxuaW1wb3J0IHsgY3JlYXRlUm91dGVyLCBleHByZXNzV3JhcHBlciB9IGZyb20gXCJuZXh0LWNvbm5lY3RcIjtcclxuaW1wb3J0IGNvcnMgZnJvbSBcImNvcnNcIjtcclxuXHJcbmNvbnN0IHJvdXRlciA9IGNyZWF0ZVJvdXRlcjxOZXh0QXBpUmVxdWVzdCwgTmV4dEFwaVJlc3BvbnNlPigpO1xyXG5cclxucm91dGVyXHJcbiAgLnVzZShleHByZXNzV3JhcHBlcihjb3JzKCkpKVxyXG4gIC51c2UoYXN5bmMgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcbiAgICBjb25zdCBzdGFydCA9IERhdGUubm93KCk7XHJcbiAgICBhd2FpdCBuZXh0KCk7XHJcbiAgICBjb25zdCBlbmQgPSBEYXRlLm5vdygpO1xyXG4gIH0pXHJcbiAgLmdldChhc3luYyAocmVxLCByZXMpID0+IHtcclxuICAgIGxldCBzb3J0ID0gcmVxLnF1ZXJ5LnNvcnQ7XHJcbiAgICBsZXQgb3JkZXIgPSByZXEucXVlcnkub3JkZXI7XHJcbiAgICBsZXQgZmlsdGVyID0gSlNPTi5wYXJzZShyZXEucXVlcnkuZmlsdGVyID8gcmVxLnF1ZXJ5LmZpbHRlcj8udG9TdHJpbmcoKSA6IFwibnVsbFwiKTtcclxuICAgIGlmKG9yZGVyICE9IFwiYXNjXCIgJiYgb3JkZXIgIT0gXCJkZXNjXCIpIG9yZGVyID0gdW5kZWZpbmVkO1xyXG4gICAgaWYoc29ydCAhPSBcInRpbWVcIiAmJiBzb3J0ICE9IFwicmF0aW5nXCIgJiYgc29ydCAhPVwiZGF0ZVwiICYmIHNvcnQgIT1cImxhbmdfbmFtZVwiKSBzb3J0ID0gdW5kZWZpbmVkO1xyXG4gICAgY29uc29sZS5sb2coZmlsdGVyKTtcclxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZWFkREIoe3RhYmxlOiBcImxvZ3NcIn0sIHtwZXJzb25zX2lkOiByZXEucXVlcnkuaWQsIHNvcnQ6IHtieTogc29ydCwgb3JkZXI6IG9yZGVyfSwgZmlsdGVyOiBmaWx0ZXJ9KTtcclxuICAgIGlmKGRhdGEpIHJlcy5zdGF0dXMoMjAwKS5qc29uKGRhdGEpO1xyXG4gICAgZWxzZSByZXMuc3RhdHVzKDUwMCkuanNvbih7bWVzc2FnZTogXCJlcnJvclwifSk7XHJcbiAgICBcclxuICB9KVxyXG4gIC5wb3N0KGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgaW5zZXJ0REIoe3RhYmxlOiBcImxvZ3NcIn0sIHtuYW1lOiBKU09OLnBhcnNlKHJlcS5ib2R5KS5uYW1lLCBkZXNjcmlwdGlvbjogSlNPTi5wYXJzZShyZXEuYm9keSkuZGVzY3JpcHRpb24sIHRpbWU6IEpTT04ucGFyc2UocmVxLmJvZHkpLnRpbWUsIGRhdGU6IEpTT04ucGFyc2UocmVxLmJvZHkpLmRhdGUsIHJhdGluZzogcmVxLnF1ZXJ5LnJhdGluZywgcGVyc29uc19pZDogcmVxLnF1ZXJ5LmlkLCBsYW5ndWFnZTogSlNPTi5wYXJzZShyZXEuYm9keSkubGFuZ3VhZ2UsIHRhZ3M6IEpTT04ucGFyc2UocmVxLmJvZHkpLnRhZ3MsIHRhZ3NfaWQ6IEpTT04ucGFyc2UocmVxLmJvZHkpLnRhZ3NfaWR9KTtcclxuICAgIGlmKHJlc3VsdCA9PSAxKSByZXMuc3RhdHVzKDUwMCkuanNvbih7bWVzc2FnZTogXCJlcnJvclwifSk7XHJcbiAgICBlbHNlIGlmKHJlc3VsdCkgcmVzLnN0YXR1cygyMDEpLmpzb24ocmVzdWx0KTtcclxuICAgIGVsc2UgcmVzLnN0YXR1cyg1MDApLmpzb24oe21lc3NhZ2U6IFwiZXJyb3JcIn0pO1xyXG4gIH0pO1xyXG5leHBvcnQgZGVmYXVsdCByb3V0ZXIuaGFuZGxlcih7XHJcbiAgb25FcnJvcjogKGVyciwgcmVxLCByZXMpID0+IHtcclxuICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtlcnJvcjogZXJyLCBtZXNzYWdlOiBcIlByb2JhYmx5IHdyb25nIGRhdGEgaW4gYm9keVwifSk7XHJcbiAgfSxcclxuICBvbk5vTWF0Y2g6IChyZXEsIHJlcykgPT4ge1xyXG4gICAgcmVzLnN0YXR1cyg0MDUpLmpzb24oeyBtZXNzYWdlOiBcIk1ldGhvZCBOb3QgQWxsb3dlZFwiIH0pO1xyXG4gIH0sXHJcbn0pO1xyXG5cclxuLypleHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBSV2xsb2dzKFxyXG4gIHJlcTogTmV4dEFwaVJlcXVlc3QsXHJcbiAgcmVzOiBOZXh0QXBpUmVzcG9uc2VcclxuKSB7XHJcbiAgdHJ5IHtcclxuICAgIGlmKHJlcS5tZXRob2QgPT09IFwiR0VUXCIpe1xyXG4gICAgICBsZXQgc29ydCA9IHJlcS5xdWVyeS5zb3J0O1xyXG4gICAgICBsZXQgb3JkZXIgPSByZXEucXVlcnkub3JkZXI7XHJcbiAgICAgIGlmKG9yZGVyICE9IFwiYXNjXCIgJiYgb3JkZXIgIT0gXCJkZXNjXCIpIG9yZGVyID0gdW5kZWZpbmVkO1xyXG4gICAgICBpZihzb3J0ICE9IFwidGltZVwiICYmIHNvcnQgIT0gXCJyYXRpbmdcIiAmJiBzb3J0ICE9XCJkYXRlXCIpIHNvcnQgPSB1bmRlZmluZWQ7XHJcbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZWFkREIoe3RhYmxlOiBcImxvZ3NcIn0sIHtwZXJzb25zX2lkOiByZXEucXVlcnkuaWQsIHNvcnQ6IHtieTogc29ydCwgb3JkZXI6IG9yZGVyfX0pO1xyXG4gICAgICBpZihkYXRhKSByZXMuc3RhdHVzKDIwMCkuanNvbihkYXRhKTtcclxuICAgICAgZWxzZSByZXMuc3RhdHVzKDUwMCkuanNvbih7bWVzc2FnZTogXCJlcnJvclwifSk7XHJcbiAgICB9ZWxzZSBpZihyZXEubWV0aG9kID09PSBcIlBPU1RcIil7XHJcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGluc2VydERCKHt0YWJsZTogXCJsb2dzXCJ9LCB7bmFtZTogSlNPTi5wYXJzZShyZXEuYm9keSkubmFtZSwgZGVzY3JpcHRpb246IEpTT04ucGFyc2UocmVxLmJvZHkpLmRlc2NyaXB0aW9uLCB0aW1lOiBKU09OLnBhcnNlKHJlcS5ib2R5KS50aW1lLCBkYXRlOiBKU09OLnBhcnNlKHJlcS5ib2R5KS5kYXRlLCByYXRpbmc6IHJlcS5xdWVyeS5yYXRpbmcsIHBlcnNvbnNfaWQ6IHJlcS5xdWVyeS5pZCwgbGFuZ3VhZ2U6IEpTT04ucGFyc2UocmVxLmJvZHkpLmxhbmd1YWdlLCB0YWdzOiBKU09OLnBhcnNlKHJlcS5ib2R5KS50YWdzLCB0YWdzX2lkOiBKU09OLnBhcnNlKHJlcS5ib2R5KS50YWdzX2lkfSk7XHJcbiAgICAgIGlmKHJlc3VsdCA9PSAxKSByZXMuc3RhdHVzKDUwMCkuanNvbih7bWVzc2FnZTogXCJlcnJvclwifSk7XHJcbiAgICAgIGVsc2UgaWYocmVzdWx0KSByZXMuc3RhdHVzKDIwMSkuanNvbihyZXN1bHQpO1xyXG4gICAgICBlbHNlIHJlcy5zdGF0dXMoNTAwKS5qc29uKHttZXNzYWdlOiBcImVycm9yXCJ9KTtcclxuICAgICAgICBcclxuICAgIH1lbHNle1xyXG4gICAgICByZXMuc3RhdHVzKDQwNSkuanNvbih7IG1lc3NhZ2U6IFwiTWV0aG9kIE5vdCBBbGxvd2VkXCIgfSk7XHJcbiAgICB9XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtlcnJvcjogZXJyb3IsIG1lc3NhZ2U6IFwiUHJvYmFibHkgd3JvbmcgZGF0YSBpbiBib2R5XCJ9KTtcclxuICB9XHJcblxyXG59Ki8iXSwibmFtZXMiOlsiaW5zZXJ0REIiLCJyZWFkREIiLCJjcmVhdGVSb3V0ZXIiLCJleHByZXNzV3JhcHBlciIsImNvcnMiLCJyb3V0ZXIiLCJ1c2UiLCJyZXEiLCJyZXMiLCJuZXh0Iiwic3RhcnQiLCJEYXRlIiwibm93IiwiZW5kIiwiZ2V0Iiwic29ydCIsInF1ZXJ5Iiwib3JkZXIiLCJmaWx0ZXIiLCJKU09OIiwicGFyc2UiLCJ0b1N0cmluZyIsInVuZGVmaW5lZCIsImNvbnNvbGUiLCJsb2ciLCJkYXRhIiwidGFibGUiLCJwZXJzb25zX2lkIiwiaWQiLCJieSIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIiwicG9zdCIsInJlc3VsdCIsIm5hbWUiLCJib2R5IiwiZGVzY3JpcHRpb24iLCJ0aW1lIiwiZGF0ZSIsInJhdGluZyIsImxhbmd1YWdlIiwidGFncyIsInRhZ3NfaWQiLCJoYW5kbGVyIiwib25FcnJvciIsImVyciIsImVycm9yIiwib25Ob01hdGNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/persons/logs/[id]/index.exp.ts\n");

/***/ }),

/***/ "(api)/./config.json":
/*!*********************!*\
  !*** ./config.json ***!
  \*********************/
/***/ ((module) => {

module.exports = JSON.parse('{"databaseName":"mydb.sqlite"}');

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./src/pages/api/persons/logs/[id]/index.exp.ts"));
module.exports = __webpack_exports__;

})();